apply plugin: 'com.android.application'

android {
    signingConfigs {
        config {
            keyAlias 'mobileapps'
            keyPassword 'mobileapps'
            storeFile file('mobileapps.keystore')
            storePassword 'mobileapps'
        }
        moduleConfig {
            keyAlias 'superapplock'
            keyPassword 'superapplock'
            storeFile file('superapplock-module.keystore')
            storePassword 'superapplock'
        }
    }
    android.applicationVariants.all {
        variant ->
        def file = variant.outputs[0].outputFile
        variant.outputs[0].outputFile = new File(file.parent, file.name.replace("applocknew", "applock-mobile"))
    }

    compileSdkVersion 23
    buildToolsVersion "21.1.2"
    defaultConfig {
        applicationId "com.security.applock"
        minSdkVersion 11
        targetSdkVersion 21
        testApplicationId "com.freejoyapps.applock.tests"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
        versionCode 14
        versionName 'v2.3'
        signingConfig signingConfigs.config
        resValue("string", 'app_name', 'AppLock')
        buildConfigField('String', 'ROOT_DIR_NAME', '"/.auroralock/"')
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    productFlavors {
        aurora {}
        module {
            applicationId "com.freejoyapps.applock"
            versionCode 21
            versionName 'v2.3'
            signingConfig signingConfigs.moduleConfig
            resValue("string", "app_name", "AppLock")
            buildConfigField('String', 'ROOT_DIR_NAME', '"/.security_s_lock/"')
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
//    compile project(':library')
    compile project(':ByakuGallery')
    compile 'com.jakewharton:butterknife:6.1.0'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
    compile project(':api')
    compile project(':model')
    compile 'com.privacy.lib:common:1.1.0'
    compile 'com.core:empty:1.0.3'
}
